@using EasyToDoWeb.ViewModel
@model List<CategoriaViewModel>

@{
	ViewData["Title"] = "Categorias";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container mt-4">

	<div class="d-flex justify-content-between align-items-center mb-3">
		<h1 class="mb-0">Categorias</h1>

		<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#categoriaModal">
			Nova Categoria
		</button>
	</div>


	@if (TempData["Mensagem"] != null)
	{
		<div class="alert alert-success">@TempData["Mensagem"]</div>
	}
	@if (TempData["Erro"] != null)
	{
		<div class="alert alert-danger">@TempData["Erro"]</div>
	}


	<div class="row g-3">
		@foreach (var categoria in Model)
		{
			var corCategoria = categoria.Cor?.ToLower() ?? "gray";
			var coresSuaves = new Dictionary<string, string>
				{
					["red"] = "rgba(220, 53, 69, 0.1)",
					["blue"] = "rgba(13, 110, 253, 0.1)",
					["green"] = "rgba(25, 135, 84, 0.1)",
					["orange"] = "rgba(255, 165, 0, 0.2)",
					["purple"] = "rgba(128, 0, 128, 0.2)",
					["gray"] = "rgba(108, 117, 125, 0.1)"
				};

			var bgCor = coresSuaves.ContainsKey(corCategoria) ? coresSuaves[corCategoria] : coresSuaves["gray"];
			<div class="col-md-4 col-lg-3">
				<div class="card shadow-sm border-2 rounded-2 border-light text-dark" style="background-color:@bgCor">
					<div class="card-body">
						<h5 class="card-title text-light text-center">@categoria.Name</h5>
						<span class="badge @(categoria.Situacao == 1 ? "bg-success" : "bg-secondary")">
							@(categoria.Situacao == 1 ? "Ativo" : "Inativo")
						</span>
						<div class="accordion-button w-100 ">
							<form id="form-excluir-@categoria.Id"
								  asp-action="Delete"
								  asp-controller="Categoria"
								  asp-route-id="@categoria.Id"
								  method="post"
								  class="d-inline">
								<button type="button"
										class="btn btn-sm btn-danger m-1 w-45"
										onclick="confirmarExclusao(@categoria.Id)">
									Apagar
								</button>
							</form>
							<button class="btn btn-sm btn-primary w-48" data-bs-toggle="modal" data-bs-target="#modalEditarCategoria"
									data-id="@categoria.Id">
								Editar
							</button>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>

<!-- Modal de cadastro -->
@await Html.PartialAsync("Modal/_ModalCadastrarCategoria", new CategoriaViewModel())
@await Html.PartialAsync("Modal/_ModalEditarCategoria", new CategoriaViewModel())


<!-- Scripts -->
@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		$(document).ready(function () {
			$('#formCadastrarCategoria').on('submit', function (e) {
				e.preventDefault();

				var formData = $(this).serialize();

				$.ajax({
					type: "POST",
					url: "/Categoria/CadastrarCategoria",
					data: formData,
					success: function () {
						$('#categoriaModal').modal('hide');
						$('#formCadastrarCategoria')[0].reset();
						location.reload();
					},
					error: function () {
						alert("Erro ao cadastrar categoria.");
					}
				});
			});

			const colorSelect = document.getElementById("colorSelect");
			const colorPreview = document.getElementById("colorPreview");

			if (colorSelect && colorPreview) {
				function updateColorPreview() {
					colorPreview.style.backgroundColor = colorSelect.value;
				}

				colorSelect.addEventListener("change", updateColorPreview);
				updateColorPreview();
			}
		});
	</script>

	<script>
				$(document).ready(function () {
			// Cria a instância do modal apenas uma vez
			var modalEditarCategoria = new bootstrap.Modal(document.getElementById('modalEditarCategoria'));

			// Evento para abrir o modal com dados da categoria
			$('.btn-editar-categoria').click(function () {
				var categoriaId = $(this).data('id');

				$.ajax({
					url: '/Categoria/EditarCategoria',
					type: 'GET',
					data: { id: categoriaId },
					success: function (data) {
						$('#categoriaId').val(data.id);
						$('#editarNomeCategoria').val(data.name);

						// Mostra o modal usando a instância já criada
						modalEditarCategoria.show();
					},
					error: function () {
						alert('Erro ao carregar dados da categoria.');
					}
				});
			});

			// Submissão do formulário
			$('#formEditarCategoria').submit(function (e) {
				e.preventDefault();

				var formData = $(this).serialize();

				$.ajax({
					url: '/Categoria/EditarCategoria',
					type: 'POST',
					data: formData,
					success: function () {
						// Fecha o modal com a instância criada
						modalEditarCategoria.hide();

						location.reload();
					},
					error: function () {
						alert('Erro ao salvar alterações.');
					}
				});
			});
		});

	</script>

	<script>
		function confirmarExclusao(id) {
			const swalWithBootstrapButtons = Swal.mixin({
				customClass: {
					confirmButton: "btn btn-success me-2",
					cancelButton: "btn btn-danger"
				},
				buttonsStyling: false
			});

			swalWithBootstrapButtons.fire({
				title: "Tem certeza?",
				text: "Essa ação excluirá a categoria permanentemente.",
				icon: "warning",
				showCancelButton: true,
				confirmButtonText: "Sim, excluir",
				cancelButtonText: "Cancelar",
				reverseButtons: true
			}).then((result) => {
				if (result.isConfirmed) {
					document.getElementById('form-excluir-' + id).submit();
				} else {
					swalWithBootstrapButtons.fire(
						"Cancelado",
						"A categoria não foi excluída.",
						"info"
					);
				}
			});
		}
	</script>
}